name: Node.js CI/CD

on:
  push:
    branches:
      - 'main'
    tags: 'v*'
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.2
      - name: Setup Node.js ${{ vars.NODE_VERSION }}
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{ vars.NODE_VERSION }}
          cache: npm

      - name: Install Dependencies
        run: npm ci

      - name: ESLint
        run: npm run lint:eslint
      - name: Prettier
        run: npm run lint:prettier
      - name: Type Check
        run: npm run lint:tsc

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.2
      - name: Setup Node.js ${{ vars.NODE_VERSION }}
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{ vars.NODE_VERSION }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build
        env:
          NUXT_PUBLIC_STUDIO_API_URL: ${{ vars.NUXT_PUBLIC_STUDIO_API_URL }}
          NUXT_PUBLIC_STUDIO_TOKENS: ${{ vars.NUXT_PUBLIC_STUDIO_TOKENS }}
          NUXT_UI_PRO_LICENSE: ${{ secrets.NUXT_UI_PRO_LICENSE }}
          NODE_OPTIONS: --max-old-space-size=8192

      - name: Upload Production Artifact
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          path: .output/public

  deploy:
    name: Deploy
    needs: [build]
    concurrency:
      group: 'pages'
      cancel-in-progress: true
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.5
